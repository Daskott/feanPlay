var app=angular.module("app",["ngRoute","ngMaterial"]);angular.module("app").controller("ApplicationCtrl",["$scope",function(o){o.$on("login",function(e,t){o.currentUser=t})}]);var app=angular.module("app");app.controller("LoginCtrl",["$scope","$location","UserService",function(o,e,t){o.login=function(n,r){t.login(n,r).then(function(t){console.log(t),o.$emit("login",t.data),e.path("/")})}}]);var app=angular.module("app");app.controller("PostsCtrl",["$scope","PostsService",function(o,e){e.fetch().success(function(e){o.posts=e}),o.addPost=function(){o.postBody&&e.create({body:o.postBody}).success(function(e){o.postBody=null})},o.$on("ws:new_post",function(e,t){console.log("GOT IT"),o.$apply(function(){o.posts.unshift(t)})})}]);var app=angular.module("app");app.service("PostsService",["$http",function(o){this.fetch=function(){return o.get("/api/posts")},this.create=function(e){return o.post("/api/posts",e)}}]);var app=angular.module("app");app.controller("RegisterCtrl",["$scope","$location","UserService",function(o,e,t){o.register=function(o,n){t.register(o,n).then(function(r){console.log(o,n),t.login(o,n),e.path("/login"),console.log(r)})}}]),angular.module("app").config(["$routeProvider",function(o){o.when("/",{controller:"PostsCtrl",templateUrl:"posts.html"}).when("/register",{controller:"RegisterCtrl",templateUrl:"register.html"}).when("/login",{controller:"LoginCtrl",templateUrl:"login.html"})}]);var app=angular.module("app");app.service("UserService",["$http",function(o){var e=this;e.getUser=function(){return o.get("/api/users")},e.login=function(t,n){return o.post("/api/sessions",{username:t,password:n}).then(function(t){return e.token=t.data,o.defaults.headers.common["X-Auth"]=t.data,e.getUser()})},e.register=function(e,t){return o.post("/api/users",{username:e,password:t})}}]);var app=angular.module("app"),addr="10.151.97.62";app.run(["$rootScope","$timeout",function(o,e){!function t(){var n="ws://"+addr+":5000",r=new WebSocket(n);r.onclose=function(o){console.log("WebSocket closed. Reconnecting..."),e(t,1e4)},r.onmessage=function(e){var t=JSON.parse(e.data);console.log("recieve broadcast"),o.$broadcast("ws:"+t.topic,t.data)}}()}]);
//# sourceMappingURL=data:application/json;base64,
