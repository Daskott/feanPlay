var app=angular.module("app",["ngRoute","ngMaterial"]);angular.module("app").controller("ApplicationCtrl",["$scope",function(e){e.$on("login",function(o,t){e.currentUser=t})}]);var app=angular.module("app");app.controller("LoginCtrl",["$scope","$location","UserService",function(e,o,t){e.login=function(n,r){t.login(n,r).then(function(t){console.log(t),e.$emit("login",t.data),o.path("/")})}}]);var app=angular.module("app");app.controller("PostsCtrl",["$scope","PostsService",function(e,o){o.fetch().success(function(o){e.posts=o}),e.addPost=function(){e.postBody&&o.create({body:e.postBody}).success(function(o){e.postBody=null})},e.$on("ws:new_post",function(o,t){console.log("GOT IT"),e.$apply(function(){e.posts.unshift(t)})})}]);var app=angular.module("app");app.service("PostsService",["$http",function(e){this.fetch=function(){return e.get("/api/posts")},this.create=function(o){return e.post("/api/posts",o)}}]);var app=angular.module("app");app.controller("RegisterCtrl",["$scope","$location","UserService",function(e,o,t){e.register=function(e,n){t.register(e,n).then(function(r){console.log(e,n),t.login(e,n),o.path("/login"),console.log(r)})}}]),angular.module("app").config(["$routeProvider",function(e){e.when("/",{controller:"PostsCtrl",templateUrl:"posts.html"}).when("/register",{controller:"RegisterCtrl",templateUrl:"register.html"}).when("/login",{controller:"LoginCtrl",templateUrl:"login.html"})}]),angular.module("app").config(["$mdThemingProvider",function(e){e.theme("default").primaryPalette("deep-purple").accentPalette("red")}]);var app=angular.module("app");app.service("UserService",["$http",function(e){var o=this;o.getUser=function(){return e.get("/api/users")},o.login=function(t,n){return e.post("/api/sessions",{username:t,password:n}).then(function(t){return o.token=t.data,e.defaults.headers.common["X-Auth"]=t.data,o.getUser()})},o.register=function(o,t){return e.post("/api/users",{username:o,password:t})}}]);var app=angular.module("app"),addr="10.151.97.62";app.run(["$rootScope","$timeout",function(e,o){!function t(){var n="ws://"+addr+":5000",r=new WebSocket(n);r.onclose=function(e){console.log("WebSocket closed. Reconnecting..."),o(t,1e4)},r.onmessage=function(o){var t=JSON.parse(o.data);console.log("recieve broadcast"),e.$broadcast("ws:"+t.topic,t.data)}}()}]);
//# sourceMappingURL=data:application/json;base64,
